steps:
  - checkout: self
    clean: true

  - task: Bash@3
    displayName: 'Cake Provision'
    condition: eq(variables['provisioningCake'], 'true')
    inputs:
      targetType: 'filePath'
      filePath: 'build.sh'
      arguments: --target provision --TeamProject="$(System.TeamProject)"

  - task: xamops.azdevex.provisionator-task.provisionator@1
    displayName: 'Provisionator'
    condition: eq(variables['provisioning'], 'true')
    inputs:
      provisioning_script: $(provisionator.path)
      provisioning_extra_args: $(provisionator.extraArguments)

  - task: UseDotNet@2
    displayName: 'Install .net core $(DOTNET_VERSION)'
    condition: ne(variables['DOTNET_VERSION'], '')
    inputs:
      version: $(DOTNET_VERSION)
      packageType: 'sdk'
  
  # - script: '/bin/bash -c "sudo $AGENT_HOMEDIRECTORY/scripts/select-xamarin-sdk.sh ${{ parameters.monoVersion }}"'
  #   displayName: 'Select MONO ${{ parameters.monoVersion }}'
  
  - task: NuGetToolInstaller@1
    displayName: 'Use NuGet'
    condition: ne(variables['NUGET_VERSION'], '')
    inputs:
      versionSpec: $(NUGET_VERSION)
  
  - task: DownloadBuildArtifacts@0
    displayName: 'Download build artifact nuget'
    condition: eq(variables['System.TeamProject'], 'DevDiv')
    inputs:
      artifactName: 'nuget'
      downloadPath: 'Nuget'
  
  - task: CopyFiles@2
    displayName: 'Copy Files to: $(System.DefaultWorkingDirectory)'
    condition: eq(variables['System.TeamProject'], 'DevDiv')
    inputs:
      SourceFolder: 'Nuget/nuget/$(BuildConfiguration)'
      TargetFolder: 'Nuget'
  
  - task: NuGetCommand@2
    displayName: 'NuGet restore Xamarin.Forms'
    inputs:
      command: restore
      restoreSolution: $(SolutionFile)
      feedsToUse: config
      nugetConfigPath: 'eng/DevopsNuget.config'
  
  - task: NuGetCommand@2
    displayName: 'NuGet restore ControlGallery'
    inputs:
      command: restore 
      restoreSolution: $(ControlGallerySolutionFile)
      feedsToUse: config
      nugetConfigPath: 'eng/DevopsNuget.config'
  
  - task: Bash@3
    displayName: 'Build Android $(renderers)'
    inputs:
      targetType: 'filePath'
      filePath: 'build.sh'
      arguments: --target cg-android --ANDROID_RENDERERS="$(renderers)" --GoogleMapsAPIKey="$(GoogleMapsAPIKey)" --BUILD_CONFIGURATION=$(BuildConfiguration)
  
  - task: CopyFiles@2
    displayName: 'Copy $(renderers)'
    inputs:
      SourceFolder: Xamarin.Forms.ControlGallery.Android/bin/$(BuildConfiguration)/
      Contents: '**/*.apk'
      TargetFolder: 'src/ControlGallery/src/Xamarin.Forms.ControlGallery.Android/$(outputfolder)/'
      CleanTargetFolder: true
      OverWrite: true
  
  - task: CopyFiles@2
    displayName: 'Copy Android apk $(renderers) for UITest'
    inputs:
      Contents: |
        src/ControlGallery/src/Xamarin.Forms.ControlGallery.Android/$(outputfolder)/$(ApkName)
      TargetFolder: '$(build.artifactstagingdirectory)/androidApp'
      CleanTargetFolder: true
  
  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact: AndroidApps'
    condition: always()
    inputs:
      PathtoPublish: '$(build.artifactstagingdirectory)'
      ArtifactName: OSXArtifacts